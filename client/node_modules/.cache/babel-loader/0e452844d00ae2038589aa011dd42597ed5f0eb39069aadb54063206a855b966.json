{"ast":null,"code":"var _jsxFileName = \"/Users/olsenbudanur/Desktop/My stuff/Projects/WinterBreak/ChatGPT_Project/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { TypeAnimation } from \"react-type-animation\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ChatGPTMessage, setChatGPTMessage] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  async function submit() {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Accept\", \"application/json\");\n    myHeaders.append(\"Origin\", \"http://localhost:3000\");\n    var raw = JSON.stringify({\n      ChatGPTMessage: ChatGPTMessage\n    });\n    var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\",\n      mode: \"cors\"\n    };\n    let textData = \"\";\n    fetch(\"http://localhost:8080/college-essay\", requestOptions).then(response => response.json()).then(data => textData = data)\n    // .then((data) => setValue(data.body))\n    .catch(error => console.log(\"error\", error));\n    let index = 0;\n    let interval = setInterval(() => {\n      if (index < textData.length) {\n        setValue(oldState => oldState += textData.charAt(index));\n        index++;\n      }\n    }, 20);\n  }\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"textarea\",\n      name: \"textValue\",\n      onChange: e => setChatGPTMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: \"Send the data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TypeAnimation, {\n      sequence: [\"This will be the typing animation of the response, eventually.\"],\n      speed: 70,\n      wrapper: \"div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"vP15G6rtiS45FQ7nbaZ6co1/rBA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","TypeAnimation","App","ChatGPTMessage","setChatGPTMessage","value","setValue","submit","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","mode","textData","fetch","then","response","json","data","catch","error","console","log","index","interval","setInterval","length","oldState","charAt","e","target"],"sources":["/Users/olsenbudanur/Desktop/My stuff/Projects/WinterBreak/ChatGPT_Project/client/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { TypeAnimation } from \"react-type-animation\";\nimport \"./App.css\";\n\nfunction App() {\n\tconst [ChatGPTMessage, setChatGPTMessage] = useState<string>(\"\");\n\tconst [value, setValue] = useState<string>(\"\");\n\n\tasync function submit() {\n\t\tvar myHeaders = new Headers();\n\t\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\t\tmyHeaders.append(\"Accept\", \"application/json\");\n\t\tmyHeaders.append(\"Origin\", \"http://localhost:3000\");\n\n\t\tvar raw = JSON.stringify({\n\t\t\tChatGPTMessage: ChatGPTMessage,\n\t\t});\n\n\t\tvar requestOptions: RequestInit = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: myHeaders,\n\t\t\tbody: raw,\n\t\t\tredirect: \"follow\",\n\t\t\tmode: \"cors\",\n\t\t};\n\t\tlet textData = \"\";\n\t\tfetch(\"http://localhost:8080/college-essay\", requestOptions)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => (textData = data))\n\t\t\t// .then((data) => setValue(data.body))\n\t\t\t.catch((error) => console.log(\"error\", error));\n\n\t\tlet index = 0;\n\t\tlet interval = setInterval(() => {\n\t\t\tif (index < textData.length) {\n\t\t\t\tsetValue(\n\t\t\t\t\t(oldState) => (oldState += textData.charAt(index))\n\t\t\t\t);\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}, 20);\n\t}\n\n\tuseEffect(() => {}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<input\n\t\t\t\ttype=\"textarea\"\n\t\t\t\tname=\"textValue\"\n\t\t\t\tonChange={(e) => setChatGPTMessage(e.target.value)}\n\t\t\t/>\n\t\t\t<button onClick={submit}>Send the data</button>\n\t\t\t<div>{value}</div>\n\t\t\t<br></br>\n\t\t\t<TypeAnimation\n\t\t\t\tsequence={[\n\t\t\t\t\t\"This will be the typing animation of the response, eventually.\",\n\t\t\t\t]}\n\t\t\t\tspeed={70}\n\t\t\t\twrapper=\"div\"\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAUC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACd,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGJ,QAAQ,CAAS,EAAE,CAAC;EAChE,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EAE9C,eAAeO,MAAM,GAAG;IACvB,IAAIC,SAAS,GAAG,IAAIC,OAAO,EAAE;IAC7BD,SAAS,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACpDF,SAAS,CAACE,MAAM,CAAC,QAAQ,EAAE,kBAAkB,CAAC;IAC9CF,SAAS,CAACE,MAAM,CAAC,QAAQ,EAAE,uBAAuB,CAAC;IAEnD,IAAIC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;MACxBV,cAAc,EAAEA;IACjB,CAAC,CAAC;IAEF,IAAIW,cAA2B,GAAG;MACjCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAER,SAAS;MAClBS,IAAI,EAAEN,GAAG;MACTO,QAAQ,EAAE,QAAQ;MAClBC,IAAI,EAAE;IACP,CAAC;IACD,IAAIC,QAAQ,GAAG,EAAE;IACjBC,KAAK,CAAC,qCAAqC,EAAEP,cAAc,CAAC,CAC1DQ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAML,QAAQ,GAAGK,IAAK;IACjC;IAAA,CACCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC,CAAC;IAE/C,IAAIG,KAAK,GAAG,CAAC;IACb,IAAIC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAChC,IAAIF,KAAK,GAAGV,QAAQ,CAACa,MAAM,EAAE;QAC5B3B,QAAQ,CACN4B,QAAQ,IAAMA,QAAQ,IAAId,QAAQ,CAACe,MAAM,CAACL,KAAK,CAAE,CAClD;QACDA,KAAK,EAAE;MACR;IACD,CAAC,EAAE,EAAE,CAAC;EACP;EAEA/B,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;EAEvB,oBACC;IAAK,SAAS,EAAC,KAAK;IAAA,wBACnB;MACC,IAAI,EAAC,UAAU;MACf,IAAI,EAAC,WAAW;MAChB,QAAQ,EAAGqC,CAAC,IAAKhC,iBAAiB,CAACgC,CAAC,CAACC,MAAM,CAAChC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAClD,eACF;MAAQ,OAAO,EAAEE,MAAO;MAAA,UAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAS,eAC/C;MAAA,UAAMF;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO,eAClB;MAAA;MAAA;MAAA;IAAA,QAAS,eACT,QAAC,aAAa;MACb,QAAQ,EAAE,CACT,gEAAgE,CAC/D;MACF,KAAK,EAAE,EAAG;MACV,OAAO,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QACZ;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAER;AAAC,GA5DQH,GAAG;AAAA,KAAHA,GAAG;AA8DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}