{"ast":null,"code":"var _jsxFileName = \"/Users/olsenbudanur/Desktop/My stuff/Projects/WinterBreak/ChatGPT_Project/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ChatGPTMessage, setChatGPTMessage] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  async function submit() {\n    setValue(\"Response is loading.\");\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Accept\", \"application/json\");\n    myHeaders.append(\"Origin\", \"http://localhost:3000\");\n    var raw = JSON.stringify({\n      prompt: ChatGPTMessage\n    });\n    var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\",\n      mode: \"cors\"\n    };\n    fetch(\"http://localhost:8080/college-essay\", requestOptions).then(response => response.json()).then(data => {\n      console.log(data.body);\n      setValue(\"\");\n      let index = 0;\n      let interval = setInterval(() => {\n        if (index < data.body.length) {\n          setValue(value => value += data.body.charAt(index));\n          index++;\n        } else {\n          clearInterval(interval);\n        }\n      }, 50);\n    }).catch(error => console.log(\"error\", error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"textarea\",\n      name: \"textValue\",\n      onChange: e => setChatGPTMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: \"Send the data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"jMpMtExZqufSAYeUqhsTZ6nwR8k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","ChatGPTMessage","setChatGPTMessage","value","setValue","submit","myHeaders","Headers","append","raw","JSON","stringify","prompt","requestOptions","method","headers","body","redirect","mode","fetch","then","response","json","data","console","log","index","interval","setInterval","length","charAt","clearInterval","catch","error","e","target"],"sources":["/Users/olsenbudanur/Desktop/My stuff/Projects/WinterBreak/ChatGPT_Project/client/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n\tconst [ChatGPTMessage, setChatGPTMessage] = useState<string>(\"\");\n\tconst [value, setValue] = useState<string>(\"\");\n\n\tasync function submit() {\n\t\tsetValue(\"Response is loading.\");\n\t\tvar myHeaders = new Headers();\n\t\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\t\tmyHeaders.append(\"Accept\", \"application/json\");\n\t\tmyHeaders.append(\"Origin\", \"http://localhost:3000\");\n\n\t\tvar raw = JSON.stringify({\n\t\t\tprompt: ChatGPTMessage,\n\t\t});\n\n\t\tvar requestOptions: RequestInit = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: myHeaders,\n\t\t\tbody: raw,\n\t\t\tredirect: \"follow\",\n\t\t\tmode: \"cors\",\n\t\t};\n\t\tfetch(\"http://localhost:8080/college-essay\", requestOptions)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data.body);\n\t\t\t\tsetValue(\"\");\n\t\t\t\tlet index = 0;\n\t\t\t\tlet interval = setInterval(() => {\n\t\t\t\t\tif (index < data.body.length) {\n\t\t\t\t\t\tsetValue(\n\t\t\t\t\t\t\t(value) =>\n\t\t\t\t\t\t\t\t(value +=\n\t\t\t\t\t\t\t\t\tdata.body.charAt(index))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t}\n\t\t\t\t}, 50);\n\t\t\t})\n\t\t\t.catch((error) => console.log(\"error\", error));\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<input\n\t\t\t\ttype=\"textarea\"\n\t\t\t\tname=\"textValue\"\n\t\t\t\tonChange={(e) => setChatGPTMessage(e.target.value)}\n\t\t\t/>\n\t\t\t<button onClick={submit}>Send the data</button>\n\t\t\t<div>{value}</div>\n\t\t\t<br></br>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAuBC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACd,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGH,QAAQ,CAAS,EAAE,CAAC;EAChE,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EAE9C,eAAeM,MAAM,GAAG;IACvBD,QAAQ,CAAC,sBAAsB,CAAC;IAChC,IAAIE,SAAS,GAAG,IAAIC,OAAO,EAAE;IAC7BD,SAAS,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACpDF,SAAS,CAACE,MAAM,CAAC,QAAQ,EAAE,kBAAkB,CAAC;IAC9CF,SAAS,CAACE,MAAM,CAAC,QAAQ,EAAE,uBAAuB,CAAC;IAEnD,IAAIC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;MACxBC,MAAM,EAAEX;IACT,CAAC,CAAC;IAEF,IAAIY,cAA2B,GAAG;MACjCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAET,SAAS;MAClBU,IAAI,EAAEP,GAAG;MACTQ,QAAQ,EAAE,QAAQ;MAClBC,IAAI,EAAE;IACP,CAAC;IACDC,KAAK,CAAC,qCAAqC,EAAEN,cAAc,CAAC,CAC1DO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACfC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACP,IAAI,CAAC;MACtBZ,QAAQ,CAAC,EAAE,CAAC;MACZ,IAAIsB,KAAK,GAAG,CAAC;MACb,IAAIC,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAChC,IAAIF,KAAK,GAAGH,IAAI,CAACP,IAAI,CAACa,MAAM,EAAE;UAC7BzB,QAAQ,CACND,KAAK,IACJA,KAAK,IACLoB,IAAI,CAACP,IAAI,CAACc,MAAM,CAACJ,KAAK,CAAE,CAC1B;UACDA,KAAK,EAAE;QACR,CAAC,MAAM;UACNK,aAAa,CAACJ,QAAQ,CAAC;QACxB;MACD,CAAC,EAAE,EAAE,CAAC;IACP,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAKT,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEQ,KAAK,CAAC,CAAC;EAChD;EAEA,oBACC;IAAK,SAAS,EAAC,KAAK;IAAA,wBACnB;MACC,IAAI,EAAC,UAAU;MACf,IAAI,EAAC,WAAW;MAChB,QAAQ,EAAGC,CAAC,IAAKhC,iBAAiB,CAACgC,CAAC,CAACC,MAAM,CAAChC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAClD,eACF;MAAQ,OAAO,EAAEE,MAAO;MAAA,UAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAS,eAC/C;MAAA,UAAMF;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO,eAClB;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAER;AAAC,GAxDQH,GAAG;AAAA,KAAHA,GAAG;AA0DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}