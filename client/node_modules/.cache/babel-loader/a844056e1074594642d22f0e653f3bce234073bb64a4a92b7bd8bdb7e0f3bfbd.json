{"ast":null,"code":"var _jsxFileName = \"/Users/niyama/github/ChatGPT_Project/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { TypeAnimation } from 'react-type-animation';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [value, setValue] = useState('Waiting on value');\n  function submit() {\n    fetch('http://localhost:8080/college-essay', {\n      method: 'POST',\n      body: JSON.stringify({\n        a: \"Data for ChatGPT\",\n        b: \"Data for ChatGPT\"\n      })\n    }).then(response => response.json()).then(data => {\n      setValue(data.body);\n    });\n  }\n  let handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      let res = await fetch(\"https://httpbin.org/post\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          email: email,\n          mobileNumber: mobileNumber\n        })\n      });\n      let resJson = await res.json();\n      if (res.status === 200) {\n        setName(\"\");\n        setEmail(\"\");\n        setMessage(\"User created successfully\");\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"textarea\",\n      name: \"textValue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: \"Send the data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TypeAnimation, {\n      sequence: ['This will be the typing animation of the response, eventually.'],\n      speed: 70,\n      wrapper: \"div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UVn4LAfUv94zeb5Ddlj1Mu43N/Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","TypeAnimation","App","value","setValue","submit","fetch","method","body","JSON","stringify","a","b","then","response","json","data","handleSubmit","e","preventDefault","res","name","email","mobileNumber","resJson","status","setName","setEmail","setMessage","err","console","log"],"sources":["/Users/niyama/github/ChatGPT_Project/client/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { TypeAnimation } from 'react-type-animation';\nimport './App.css';\n\nfunction App() {\n  const [value, setValue] = useState<string>('Waiting on value');\n\n  function submit(){\n    fetch('http://localhost:8080/college-essay', {\n      method: 'POST', \n      body: JSON.stringify({\n        a: \"Data for ChatGPT\", \n        b: \"Data for ChatGPT\"})})\n        .then((response) => response.json())\n        .then((data) => {setValue(data.body)});\n  }\n\n\n  let handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let res = await fetch(\"https://httpbin.org/post\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          email: email,\n          mobileNumber: mobileNumber,\n        }),\n      });\n      let resJson = await res.json();\n      if (res.status === 200) {\n        setName(\"\");\n        setEmail(\"\");\n        setMessage(\"User created successfully\");\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n\n  useEffect(() => {\n    \n  }, []);\n\n  return (\n    \n    <div className=\"App\">\n        <input type=\"textarea\" \n          name=\"textValue\"\n        />\n        <button onClick={submit} >Send the data</button>\n        <br></br>\n        <br></br>\n        <div>{value}</div>\n        <br></br>\n        <TypeAnimation \n          sequence={[\n            'This will be the typing animation of the response, eventually.',\n          ]}\n          speed={70}\n          wrapper=\"div\"\n        />\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAS,kBAAkB,CAAC;EAE9D,SAASK,MAAM,GAAE;IACfC,KAAK,CAAC,qCAAqC,EAAE;MAC3CC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,CAAC,EAAE,kBAAkB;QACrBC,CAAC,EAAE;MAAkB,CAAC;IAAC,CAAC,CAAC,CACxBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MAACZ,QAAQ,CAACY,IAAI,CAACR,IAAI,CAAC;IAAA,CAAC,CAAC;EAC5C;EAGA,IAAIS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI;MACF,IAAIC,GAAG,GAAG,MAAMd,KAAK,CAAC,0BAA0B,EAAE;QAChDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBW,IAAI,EAAEA,IAAI;UACVC,KAAK,EAAEA,KAAK;UACZC,YAAY,EAAEA;QAChB,CAAC;MACH,CAAC,CAAC;MACF,IAAIC,OAAO,GAAG,MAAMJ,GAAG,CAACL,IAAI,EAAE;MAC9B,IAAIK,GAAG,CAACK,MAAM,KAAK,GAAG,EAAE;QACtBC,OAAO,CAAC,EAAE,CAAC;QACXC,QAAQ,CAAC,EAAE,CAAC;QACZC,UAAU,CAAC,2BAA2B,CAAC;MACzC,CAAC,MAAM;QACLA,UAAU,CAAC,oBAAoB,CAAC;MAClC;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EAGD9B,SAAS,CAAC,MAAM,CAEhB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAEE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAChB;MAAO,IAAI,EAAC,UAAU;MACpB,IAAI,EAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAChB,eACF;MAAQ,OAAO,EAAEM,MAAO;MAAA,UAAE;IAAa;MAAA;MAAA;MAAA;IAAA,QAAS,eAChD;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA,UAAMF;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO,eAClB;MAAA;MAAA;MAAA;IAAA,QAAS,eACT,QAAC,aAAa;MACZ,QAAQ,EAAE,CACR,gEAAgE,CAChE;MACF,KAAK,EAAE,EAAG;MACV,OAAO,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QACb;EAAA;IAAA;IAAA;IAAA;EAAA,QAEA;AAEV;AAAC,GAhEQD,GAAG;AAAA,KAAHA,GAAG;AAkEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}