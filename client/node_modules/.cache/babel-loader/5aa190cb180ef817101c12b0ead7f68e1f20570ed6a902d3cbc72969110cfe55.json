{"ast":null,"code":"var _jsxFileName = \"/Users/olsenbudanur/Desktop/My stuff/Projects/WinterBreak/ChatGPT_Project/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { TypeAnimation } from 'react-type-animation';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [value, setValue] = useState('Waiting on value');\n  const [element, setElement] = useState(null);\n  async function test() {\n    return \"TESTING\";\n  }\n  useEffect(() => {\n    fetch('http://localhost:8080/college-essay').then(response => response.json()).then(data => setValue(data.body));\n    const newElement = /*#__PURE__*/React.createElement('TypeAnimation', {}, 'Hello, world!');\n    setElement(newElement);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [element, /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"textarea\",\n      name: \"textValue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response\",\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TypeAnimation, {\n      sequence: ['Performing Async Operation...'],\n      speed: 70,\n      wrapper: \"div\",\n      repeat: Infinity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oNt6KkIjiBjSERi8KCySSHenIwk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","TypeAnimation","App","value","setValue","element","setElement","test","fetch","then","response","json","data","body","newElement","createElement","Infinity"],"sources":["/Users/olsenbudanur/Desktop/My stuff/Projects/WinterBreak/ChatGPT_Project/client/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { TypeAnimation } from 'react-type-animation';\nimport './App.css';\n\nfunction App() {\n  const [value, setValue] = useState<string>('Waiting on value');\n  const [element, setElement] = useState<any>(null);\n\n  async function test() {\n    return \"TESTING\";\n  }\n\n  useEffect(() => {\n    fetch('http://localhost:8080/college-essay')\n        .then((response) => response.json())\n        .then((data) => setValue(data.body));\n\n        const newElement = React.createElement('TypeAnimation', {}, 'Hello, world!');\n        setElement(newElement);\n  }, []);\n\n  return (\n    \n    <div className=\"App\">\n        {element}\n        <input type=\"textarea\" \n          name=\"textValue\"\n        />\n        <div className=\"response\">{value}</div>\n        <TypeAnimation\n          sequence={[\n            'Performing Async Operation...'\n          ]}\n          speed={70}\n          wrapper=\"div\"\n          repeat={Infinity}\n        />\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAS,kBAAkB,CAAC;EAC9D,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAM,IAAI,CAAC;EAEjD,eAAeO,IAAI,GAAG;IACpB,OAAO,SAAS;EAClB;EAEAR,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,qCAAqC,CAAC,CACvCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKR,QAAQ,CAACQ,IAAI,CAACC,IAAI,CAAC,CAAC;IAEpC,MAAMC,UAAU,gBAAGhB,KAAK,CAACiB,aAAa,CAAC,eAAe,EAAE,CAAC,CAAC,EAAE,eAAe,CAAC;IAC5ET,UAAU,CAACQ,UAAU,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,oBAEE;IAAK,SAAS,EAAC,KAAK;IAAA,WACfT,OAAO,eACR;MAAO,IAAI,EAAC,UAAU;MACpB,IAAI,EAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAChB,eACF;MAAK,SAAS,EAAC,UAAU;MAAA,UAAEF;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO,eACvC,QAAC,aAAa;MACZ,QAAQ,EAAE,CACR,+BAA+B,CAC/B;MACF,KAAK,EAAE,EAAG;MACV,OAAO,EAAC,KAAK;MACb,MAAM,EAAEa;IAAS;MAAA;MAAA;MAAA;IAAA,QACjB;EAAA;IAAA;IAAA;IAAA;EAAA,QAEA;AAEV;AAAC,GApCQd,GAAG;AAAA,KAAHA,GAAG;AAsCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}