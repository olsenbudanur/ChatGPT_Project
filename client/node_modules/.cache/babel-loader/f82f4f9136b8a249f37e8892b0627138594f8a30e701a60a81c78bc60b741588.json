{"ast":null,"code":"var _jsxFileName = \"/Users/vehbikaraagac/Desktop/ChatGPT_Project/client/src/pages/TestingPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestingPage() {\n  _s();\n  const [ChatGPTMessage, setChatGPTMessage] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  async function submit() {\n    //\n    // Kill all other runs that might be happening.\n    var highestTimeoutId = setTimeout(\";\");\n    for (var i = 0; i < highestTimeoutId; i++) {\n      clearTimeout(i);\n    }\n    setValue(\"Response is loading.\");\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Accept\", \"application/json\");\n    myHeaders.append(\"Origin\", \"http://localhost:3000\");\n    var raw = JSON.stringify({\n      prompt: ChatGPTMessage\n    });\n    var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\",\n      mode: \"cors\"\n    };\n    let index = 0;\n    fetch(\"http://localhost:8080/college-essay\", requestOptions).then(response => response.json()).then(data => {\n      console.log(data.body);\n      setValue(\"\");\n      index = -1;\n      let interval = setInterval(() => {\n        if (index < data.body.length) {\n          setValue(value => value += data.body.charAt(index));\n          index++;\n        } else {\n          clearInterval(interval);\n        }\n      }, 20);\n    }).catch(error => {\n      console.log(\"error\", error);\n      setValue(\"ERROR: \" + error.toString());\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TestingPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"textarea\",\n      name: \"textValue\",\n      onChange: e => setChatGPTMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: \"Send the data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(TestingPage, \"jMpMtExZqufSAYeUqhsTZ6nwR8k=\");\n_c = TestingPage;\nexport default TestingPage;\nvar _c;\n$RefreshReg$(_c, \"TestingPage\");","map":{"version":3,"names":["React","useState","TestingPage","ChatGPTMessage","setChatGPTMessage","value","setValue","submit","highestTimeoutId","setTimeout","i","clearTimeout","myHeaders","Headers","append","raw","JSON","stringify","prompt","requestOptions","method","headers","body","redirect","mode","index","fetch","then","response","json","data","console","log","interval","setInterval","length","charAt","clearInterval","catch","error","toString","e","target"],"sources":["/Users/vehbikaraagac/Desktop/ChatGPT_Project/client/src/pages/TestingPage.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nfunction TestingPage() {\n  const [ChatGPTMessage, setChatGPTMessage] = useState<string>(\"\");\n  const [value, setValue] = useState<string>(\"\");\n\n  async function submit() {\n    //\n    // Kill all other runs that might be happening.\n    var highestTimeoutId = setTimeout(\";\");\n    for (var i = 0; i < highestTimeoutId; i++) {\n      clearTimeout(i);\n    }\n\n    setValue(\"Response is loading.\");\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Accept\", \"application/json\");\n    myHeaders.append(\"Origin\", \"http://localhost:3000\");\n\n    var raw = JSON.stringify({\n      prompt: ChatGPTMessage,\n    });\n\n    var requestOptions: RequestInit = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\",\n      mode: \"cors\",\n    };\n    let index = 0;\n    fetch(\"http://localhost:8080/college-essay\", requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data.body);\n        setValue(\"\");\n        index = -1;\n        let interval = setInterval(() => {\n          if (index < data.body.length) {\n            setValue((value) => (value += data.body.charAt(index)));\n            index++;\n          } else {\n            clearInterval(interval);\n          }\n        }, 20);\n      })\n      .catch((error) => {\n        console.log(\"error\", error);\n        setValue(\"ERROR: \" + error.toString());\n      });\n  }\n\n  return (\n    <div className=\"TestingPage\">\n      <input\n        type=\"textarea\"\n        name=\"textValue\"\n        onChange={(e) => setChatGPTMessage(e.target.value)}\n      />\n      <button onClick={submit}>Send the data</button>\n\n      <br></br>\n    </div>\n  );\n}\n\nexport default TestingPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAuBC,QAAQ,QAAQ,OAAO;AAAC;AAE3D,SAASC,WAAW,GAAG;EAAA;EACrB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGH,QAAQ,CAAS,EAAE,CAAC;EAChE,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EAE9C,eAAeM,MAAM,GAAG;IACtB;IACA;IACA,IAAIC,gBAAgB,GAAGC,UAAU,CAAC,GAAG,CAAC;IACtC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,gBAAgB,EAAEE,CAAC,EAAE,EAAE;MACzCC,YAAY,CAACD,CAAC,CAAC;IACjB;IAEAJ,QAAQ,CAAC,sBAAsB,CAAC;IAChC,IAAIM,SAAS,GAAG,IAAIC,OAAO,EAAE;IAC7BD,SAAS,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACpDF,SAAS,CAACE,MAAM,CAAC,QAAQ,EAAE,kBAAkB,CAAC;IAC9CF,SAAS,CAACE,MAAM,CAAC,QAAQ,EAAE,uBAAuB,CAAC;IAEnD,IAAIC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;MACvBC,MAAM,EAAEf;IACV,CAAC,CAAC;IAEF,IAAIgB,cAA2B,GAAG;MAChCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAET,SAAS;MAClBU,IAAI,EAAEP,GAAG;MACTQ,QAAQ,EAAE,QAAQ;MAClBC,IAAI,EAAE;IACR,CAAC;IACD,IAAIC,KAAK,GAAG,CAAC;IACbC,KAAK,CAAC,qCAAqC,EAAEP,cAAc,CAAC,CACzDQ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACR,IAAI,CAAC;MACtBhB,QAAQ,CAAC,EAAE,CAAC;MACZmB,KAAK,GAAG,CAAC,CAAC;MACV,IAAIQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC/B,IAAIT,KAAK,GAAGK,IAAI,CAACR,IAAI,CAACa,MAAM,EAAE;UAC5B7B,QAAQ,CAAED,KAAK,IAAMA,KAAK,IAAIyB,IAAI,CAACR,IAAI,CAACc,MAAM,CAACX,KAAK,CAAE,CAAC;UACvDA,KAAK,EAAE;QACT,CAAC,MAAM;UACLY,aAAa,CAACJ,QAAQ,CAAC;QACzB;MACF,CAAC,EAAE,EAAE,CAAC;IACR,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAK;MAChBR,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEO,KAAK,CAAC;MAC3BjC,QAAQ,CAAC,SAAS,GAAGiC,KAAK,CAACC,QAAQ,EAAE,CAAC;IACxC,CAAC,CAAC;EACN;EAEA,oBACE;IAAK,SAAS,EAAC,aAAa;IAAA,wBAC1B;MACE,IAAI,EAAC,UAAU;MACf,IAAI,EAAC,WAAW;MAChB,QAAQ,EAAGC,CAAC,IAAKrC,iBAAiB,CAACqC,CAAC,CAACC,MAAM,CAACrC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACnD,eACF;MAAQ,OAAO,EAAEE,MAAO;MAAA,UAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAS,eAE/C;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GA/DQL,WAAW;AAAA,KAAXA,WAAW;AAiEpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}