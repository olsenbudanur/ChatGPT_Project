{"ast":null,"code":"var _jsxFileName = \"/Users/niyama/github/ChatGPT_Project/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { TypeAnimation } from 'react-type-animation';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [ChatGPTMessage, setChatGPTMessage] = useState<string>('Waiting on value');\n  const [ChatGPTMessage, setChatGPTMessage] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  async function submit() {\n    let res = await fetch('http://localhost:8080/college-essay', {\n      method: 'POST',\n      body: \"ssa\"\n      // JSON.stringify({\n      //   // ChatGPTMessage: ChatGPTMessage, \n      //   b: \"Data for ChatGPT\"\n      // }),\n    });\n    // .then((response) => response.json())\n    // .then((data) => {setValue(data.body)});\n    let resJson = await res.json();\n    setValue(resJson.body);\n  }\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\n    \"a\": \"asfds\",\n    \"b\": \"adfds\"\n  });\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  fetch(\"http://localhost:8080/college-essay\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"textarea\",\n      name: \"textValue\",\n      onChange: e => setChatGPTMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: \"Send the data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TypeAnimation, {\n      sequence: ['This will be the typing animation of the response, eventually.'],\n      speed: 70,\n      wrapper: \"div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vP15G6rtiS45FQ7nbaZ6co1/rBA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","TypeAnimation","App","ChatGPTMessage","setChatGPTMessage","value","setValue","submit","res","fetch","method","body","resJson","json","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","headers","redirect","then","response","text","result","console","log","catch","error","e","target"],"sources":["/Users/niyama/github/ChatGPT_Project/client/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { TypeAnimation } from 'react-type-animation';\nimport './App.css';\n\nfunction App() {\n  // const [ChatGPTMessage, setChatGPTMessage] = useState<string>('Waiting on value');\n  const [ChatGPTMessage, setChatGPTMessage] = useState<string>(\"\");\n  const [value, setValue] = useState<string>(\"\");\n\n  async function submit(){\n    let res = await fetch('http://localhost:8080/college-essay', {\n      method: 'POST', \n      body: \"ssa\"\n      // JSON.stringify({\n      //   // ChatGPTMessage: ChatGPTMessage, \n      //   b: \"Data for ChatGPT\"\n      // }),\n    });\n        // .then((response) => response.json())\n        // .then((data) => {setValue(data.body)});\n    let resJson = await res.json();\n    setValue(resJson.body)\n  }\n\n\n\n\n  var myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\n  \"a\": \"asfds\",\n  \"b\": \"adfds\"\n});\n\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"http://localhost:8080/college-essay\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n  \n\n\n  useEffect(() => {}, []);\n\n  return (\n    \n    <div className=\"App\">\n        <input type=\"textarea\" \n          name=\"textValue\"\n          onChange={(e) => setChatGPTMessage(e.target.value)}\n        />\n        <button onClick={submit} >Send the data</button>\n        <div>{value}</div>\n        <br></br>\n        <TypeAnimation \n          sequence={[\n            'This will be the typing animation of the response, eventually.',\n          ]}\n          speed={70}\n          wrapper=\"div\"\n        />\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGJ,QAAQ,CAAS,EAAE,CAAC;EAChE,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EAE9C,eAAeO,MAAM,GAAE;IACrB,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE;MACN;MACA;MACA;MACA;IACF,CAAC,CAAC;IACE;IACA;IACJ,IAAIC,OAAO,GAAG,MAAMJ,GAAG,CAACK,IAAI,EAAE;IAC9BP,QAAQ,CAACM,OAAO,CAACD,IAAI,CAAC;EACxB;EAKA,IAAIG,SAAS,GAAG,IAAIC,OAAO,EAAE;EAC/BD,SAAS,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;EAEpD,IAAIC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;IACvB,GAAG,EAAE,OAAO;IACZ,GAAG,EAAE;EACP,CAAC,CAAC;EAEF,IAAIC,cAAc,GAAG;IACnBV,MAAM,EAAE,MAAM;IACdW,OAAO,EAAEP,SAAS;IAClBH,IAAI,EAAEM,GAAG;IACTK,QAAQ,EAAE;EACZ,CAAC;EAEDb,KAAK,CAAC,qCAAqC,EAAEW,cAAc,CAAC,CACzDG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC,CACnCG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC,CAAC;EAI5C/B,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;EAEvB,oBAEE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAChB;MAAO,IAAI,EAAC,UAAU;MACpB,IAAI,EAAC,WAAW;MAChB,QAAQ,EAAGgC,CAAC,IAAK3B,iBAAiB,CAAC2B,CAAC,CAACC,MAAM,CAAC3B,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACnD,eACF;MAAQ,OAAO,EAAEE,MAAO;MAAA,UAAE;IAAa;MAAA;MAAA;MAAA;IAAA,QAAS,eAChD;MAAA,UAAMF;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO,eAClB;MAAA;MAAA;MAAA;IAAA,QAAS,eACT,QAAC,aAAa;MACZ,QAAQ,EAAE,CACR,gEAAgE,CAChE;MACF,KAAK,EAAE,EAAG;MACV,OAAO,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QACb;EAAA;IAAA;IAAA;IAAA;EAAA,QAEA;AAEV;AAAC,GAnEQH,GAAG;AAAA,KAAHA,GAAG;AAqEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}